#!/bin/bash
secretsDir="../../secrets/"
configFile="${secretsDir}local.cfg"
# test files will live in serets dir
testFile="secretsRegexTestFile"
# don't allow results file to enter the repo
resultsFile="${secretsDir}${testFile}Result"

. $configFile
. switcher

let failedTests=0
defaultTestValue="testValue"
testValue=$defaultTestValue

function getAPHPConfigValue {
	echo $( { cat $resultsFile && echo "<?php echo $1 ?>"; }	| sed s/this-\>// | php ) 
	# the sed takes out object context in php var names, in order to test
}

function testAConfigReplacement {
	testResult=$(getAPHPConfigValue $configKey)
		if [[ $testResult == $testValue ]]; then
			echo "Success" 
		else 
			echo "Failiure"
			((failedTests++))
		fi
		echo "$configKey test result is $testResult"
}

function runAPHPVariableTest {
	configKey="$1"
	replacePHPConfig "$configKey" "$testValue" "$resultsFile"
	if (($?==1)); then	
		echo "Test failed - config key was empty"
		((failedTests++))
	else
		testAConfigReplacement 
	fi
}

function runAPHPConstantTest {
	configKey="$1"
	replacePHPConstant "$configKey" "$testValue" "$resultsFile"
	if (($?==1)); then	
		echo "Test failed - config key was empty"
		((failedTests++))
	else
		testAConfigReplacement
	fi
}

# Before
echo "get new results file (copying $testFile to $resultsFile)"
cp $testFile $resultsFile
echo "Refreshed $resultsFile - Do you want to run the tests? [y/n]" && read answer
if echo "$answer" | grep -q "^y" 
	then echo "continuing"
	else echo "exiting" && exit
fi

# Run tests
echo "Test Batch 1 - replace AdminSettings.php"
runAPHPVariableTest '$wgDBadminpassword' 
runAPHPVariableTest '$wgDBadminuser'

echo "Test Batch 2 - replace LocalSettings.php"
runAPHPVariableTest '$wgDBserver'
runAPHPVariableTest '$wgDBname'
runAPHPVariableTest '$wgDBuser'
runAPHPVariableTest '$wgDBpassword'
runAPHPVariableTest '$wgDBprefix'

echo "Test Batch 3 - replace Class.database.php"
runAPHPVariableTest '$this->dbhost'
runAPHPVariableTest '$this->dbport'
runAPHPVariableTest '$this->dbusername'
runAPHPVariableTest '$this->dbpassword'
runAPHPVariableTest '$this->dbname'

echo "Test Batch 4 - replace wp-config/php"
runAPHPConstantTest 'DB_NAME'
runAPHPConstantTest 'DB_USER'
runAPHPConstantTest 'DB_PASSWORD'
runAPHPConstantTest 'DB_HOST'

echo "Test Batch 5 - check dummy vars haven't been changed"
resultExpectedFromTestVar="bwahha"
testValue=$resultExpectedFromTestVar # remember to rest testValue to default at the end of this batch
configKey='$wgDBRandomString'; 
testAConfigReplacement

#test the constant too
configKey='DB_RANDOM'; 
resultExpectedFromTestConst='mypass'
testValue=$resultExpectedFromTestConst
testAConfigReplacement
#reset testValue
testValue=$defaultTestValue

# After
echo "**********FINISHED***********"
if (( failedTests > 0 )); then 
	echo "Problems found - number of failed tests is $failedTests, investigate"
else
	echo "All tests seemed to pass ok"
fi
echo "check $resultsFile for output" 
echo "*****************************"
