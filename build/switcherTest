#!/bin/bash

. switcher

let failedTests=0
testValue="testValue"

# test files will live in serets dir
testFile="../../secrets/secretsRegexTestFile"
resultsFile="${testFile}Result"

function runATest {
	configKey="$1"
	replacePHPConfig "$configKey" "$testValue" "$resultsFile"
	if (($?==1)); then	
		echo "Test failed - config key was empty"
		((failedTests++))
	else
		testResult=$( { 
			cat $resultsFile && 
			echo "<?php echo $configKey ?>"	
		} | sed s/this-\>// | php ) # take out object context in php var names, in order to test
		if [[ $testResult == $testValue ]]; then
			echo "Success - "$configKey" result is $testResult"
		else 
			echo "Failiure - "$configKey" test result is $testResult"
			((failedTests++))
		fi
	fi
}

# Before
echo "get new results file (copying $testFile to $resultsFile)"
cp $testFile $resultsFile
echo "Refreshed $resultsFile - Do you want to run the tests? [y/n]" && read answer
if echo "$answer" | grep -q "^y" 
	then echo "continuing"
	else echo "exiting" && exit
fi

# Run tests
echo "Test Batch 1 - replace AdminSettings.php"
runATest '$wgDBadminpassword' 
runATest '$wgDBadminuser'

echo "Test Batch 2 - replace LocalSettings.php"
runATest '$wgDBserver'
runATest '$wgDBname'
runATest '$wgDBuser'
runATest '$wgDBpassword'
runATest '$wgDBprefix'

echo "Test Batch 2 - replace Class.database.php"
runATest '$this->dbhost'
runATest '$this->dbport'
runATest '$this->dbusername'
runATest '$this->dbpassword'
runATest '$this->dbname'

# After
if (( failedTests > 0 )); then 
	echo "Problems found - number of failed tests is $failedTests, investigate"
else
	echo "All tests seemed to pass"
fi

